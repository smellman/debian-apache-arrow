Author: Diane Trout <diane@ghic.org>
Description: Override upstreams downloading, vendoring, and static
 compliation of jemalloc in favor of linking against the Debian
 provided library.
Forwarded: no

--- a/cpp/cmake_modules/ThirdpartyToolchain.cmake
+++ b/cpp/cmake_modules/ThirdpartyToolchain.cmake
@@ -1990,82 +1990,9 @@
   # conflict with the default allocator as well as other jemalloc
   # installations.
 
-  message(STATUS "Building jemalloc from source")
-
-  set(ARROW_JEMALLOC_USE_SHARED OFF)
-  set(JEMALLOC_PREFIX
-      "${CMAKE_CURRENT_BINARY_DIR}/jemalloc_ep-prefix/src/jemalloc_ep/dist/")
-  set(JEMALLOC_LIB_DIR "${JEMALLOC_PREFIX}/lib")
-  set(JEMALLOC_STATIC_LIB
-      "${JEMALLOC_LIB_DIR}/libjemalloc_pic${CMAKE_STATIC_LIBRARY_SUFFIX}")
-  set(JEMALLOC_CONFIGURE_COMMAND ./configure "AR=${CMAKE_AR}" "CC=${CMAKE_C_COMPILER}")
-  if(CMAKE_OSX_SYSROOT)
-    list(APPEND JEMALLOC_CONFIGURE_COMMAND "SDKROOT=${CMAKE_OSX_SYSROOT}")
-  endif()
-  if(DEFINED ARROW_JEMALLOC_LG_PAGE)
-    # Used for arm64 manylinux wheels in order to make the wheel work on both
-    # 4k and 64k page arm64 systems.
-    list(APPEND JEMALLOC_CONFIGURE_COMMAND "--with-lg-page=${ARROW_JEMALLOC_LG_PAGE}")
-  endif()
-  list(APPEND
-       JEMALLOC_CONFIGURE_COMMAND
-       "--prefix=${JEMALLOC_PREFIX}"
-       "--libdir=${JEMALLOC_LIB_DIR}"
-       "--with-jemalloc-prefix=je_arrow_"
-       "--with-private-namespace=je_arrow_private_"
-       "--without-export"
-       "--disable-shared"
-       # Don't override operator new()
-       "--disable-cxx"
-       "--disable-libdl"
-       # See https://github.com/jemalloc/jemalloc/issues/1237
-       "--disable-initial-exec-tls"
-       ${EP_LOG_OPTIONS})
-  if(${UPPERCASE_BUILD_TYPE} STREQUAL "DEBUG")
-    # Enable jemalloc debug checks when Arrow itself has debugging enabled
-    list(APPEND JEMALLOC_CONFIGURE_COMMAND "--enable-debug")
-  endif()
-
-  set(JEMALLOC_BUILD_COMMAND ${MAKE} ${MAKE_BUILD_ARGS})
-  # Paralleism for Make fails with CMake > 3.28 see #39517
-  if(${CMAKE_GENERATOR} MATCHES "Makefiles")
-    list(APPEND JEMALLOC_BUILD_COMMAND "-j1")
-  endif()
-
-  if(CMAKE_OSX_SYSROOT)
-    list(APPEND JEMALLOC_BUILD_COMMAND "SDKROOT=${CMAKE_OSX_SYSROOT}")
-  endif()
-
-  externalproject_add(jemalloc_ep
-                      ${EP_COMMON_OPTIONS}
-                      URL ${JEMALLOC_SOURCE_URL}
-                      URL_HASH "SHA256=${ARROW_JEMALLOC_BUILD_SHA256_CHECKSUM}"
-                      PATCH_COMMAND touch doc/jemalloc.3 doc/jemalloc.html
-                                    # The prefix "je_arrow_" must be kept in sync with the value in memory_pool.cc
-                      CONFIGURE_COMMAND ${JEMALLOC_CONFIGURE_COMMAND}
-                      BUILD_IN_SOURCE 1
-                      BUILD_COMMAND ${JEMALLOC_BUILD_COMMAND}
-                      BUILD_BYPRODUCTS "${JEMALLOC_STATIC_LIB}"
-                      INSTALL_COMMAND ${MAKE} -j1 install)
-
-  # Don't use the include directory directly so that we can point to a path
-  # that is unique to our codebase.
-  set(JEMALLOC_INCLUDE_DIR "${CMAKE_CURRENT_BINARY_DIR}/jemalloc_ep-prefix/src/")
-  # The include directory must exist before it is referenced by a target.
-  file(MAKE_DIRECTORY "${JEMALLOC_INCLUDE_DIR}")
-  add_library(jemalloc::jemalloc STATIC IMPORTED)
-  set_target_properties(jemalloc::jemalloc PROPERTIES IMPORTED_LOCATION
-                                                      "${JEMALLOC_STATIC_LIB}")
-  target_link_libraries(jemalloc::jemalloc INTERFACE Threads::Threads)
-  target_include_directories(jemalloc::jemalloc BEFORE
-                             INTERFACE "${JEMALLOC_INCLUDE_DIR}")
-  add_dependencies(jemalloc::jemalloc jemalloc_ep)
-
-  list(APPEND ARROW_BUNDLED_STATIC_LIBS jemalloc::jemalloc)
-
-  set(jemalloc_VENDORED TRUE)
-  # For config.h.cmake
-  set(ARROW_JEMALLOC_VENDORED ${jemalloc_VENDORED})
+  set(ARROW_JEMALLOC_USE_SHARED ON)
+  set(jemalloc_SOURCE "SYSTEM")
+  find_package(jemalloc)
 endmacro()
 
 if(ARROW_JEMALLOC)
